<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\uartSendReceive.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\uartSendReceive.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Aug 11 15:27:37 2022
<BR><P>
<H3>Maximum Stack Usage =        184 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
hard_fault_handler_c &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">IRQ01_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">IRQ01_Handler</a><BR>
 <LI><a href="#[d]">IRQ02_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">IRQ02_Handler</a><BR>
 <LI><a href="#[e]">IRQ03_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">IRQ03_Handler</a><BR>
 <LI><a href="#[f]">IRQ04_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">IRQ04_Handler</a><BR>
 <LI><a href="#[10]">IRQ05_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">IRQ05_Handler</a><BR>
 <LI><a href="#[11]">IRQ06_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">IRQ06_Handler</a><BR>
 <LI><a href="#[14]">IRQ09_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">IRQ09_Handler</a><BR>
 <LI><a href="#[17]">IRQ12_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">IRQ12_Handler</a><BR>
 <LI><a href="#[18]">IRQ13_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">IRQ13_Handler</a><BR>
 <LI><a href="#[1a]">IRQ15_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">IRQ15_Handler</a><BR>
 <LI><a href="#[1b]">IRQ16_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">IRQ16_Handler</a><BR>
 <LI><a href="#[1c]">IRQ17_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">IRQ17_Handler</a><BR>
 <LI><a href="#[1d]">IRQ18_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">IRQ18_Handler</a><BR>
 <LI><a href="#[1e]">IRQ19_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">IRQ19_Handler</a><BR>
 <LI><a href="#[1f]">IRQ20_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">IRQ20_Handler</a><BR>
 <LI><a href="#[20]">IRQ21_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">IRQ21_Handler</a><BR>
 <LI><a href="#[21]">IRQ22_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">IRQ22_Handler</a><BR>
 <LI><a href="#[22]">IRQ23_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">IRQ23_Handler</a><BR>
 <LI><a href="#[23]">IRQ24_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">IRQ24_Handler</a><BR>
 <LI><a href="#[24]">IRQ25_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">IRQ25_Handler</a><BR>
 <LI><a href="#[25]">IRQ26_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">IRQ26_Handler</a><BR>
 <LI><a href="#[26]">IRQ27_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">IRQ27_Handler</a><BR>
 <LI><a href="#[27]">IRQ28_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">IRQ28_Handler</a><BR>
 <LI><a href="#[28]">IRQ29_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">IRQ29_Handler</a><BR>
 <LI><a href="#[29]">IRQ30_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">IRQ30_Handler</a><BR>
 <LI><a href="#[2a]">IRQ31_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">IRQ31_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7]">HardFault_Handler</a> from main.o(.emb_text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[b]">IRQ00_Handler</a> from system_cms32l051.o(i.IRQ00_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[c]">IRQ01_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[d]">IRQ02_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[e]">IRQ03_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[f]">IRQ04_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[10]">IRQ05_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[11]">IRQ06_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[12]">IRQ07_Handler</a> from sci_user.o(i.IRQ07_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[13]">IRQ08_Handler</a> from sci_user.o(i.IRQ08_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[14]">IRQ09_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[15]">IRQ10_Handler</a> from sci_user.o(i.uart0_interrupt_send) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[16]">IRQ11_Handler</a> from sci_user.o(i.uart0_interrupt_receive) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[17]">IRQ12_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[18]">IRQ13_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[19]">IRQ14_Handler</a> from sci_user.o(i.spi11_interrupt) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1a]">IRQ15_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1b]">IRQ16_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1c]">IRQ17_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1d]">IRQ18_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1e]">IRQ19_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1f]">IRQ20_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[20]">IRQ21_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[21]">IRQ22_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[22]">IRQ23_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[23]">IRQ24_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[24]">IRQ25_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[25]">IRQ26_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[26]">IRQ27_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[27]">IRQ28_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[28]">IRQ29_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[29]">IRQ30_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[2a]">IRQ31_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from system_cms32l051.o(i.SystemInit) referenced from startup_cms32l051.o(.text)
 <LI><a href="#[30]">__main</a> from __main.o(!!!main) referenced from startup_cms32l051.o(.text)
 <LI><a href="#[2f]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[2e]">fputc</a> from retarget.o(i.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[2b]">hard_fault_handler_c</a> from main.o(i.hard_fault_handler_c) referenced from main.o(.emb_text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[30]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[33]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[78]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[79]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[34]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[7a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[4d]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[35]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[36]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[3b]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7b]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[80]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[81]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[82]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[83]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[84]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[85]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[86]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[87]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[88]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[89]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[40]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[90]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[91]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[92]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[93]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[94]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[95]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[96]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[97]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[32]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[98]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[38]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3a]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[99]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3c]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[9a]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[57]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3f]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[9b]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[41]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>

<P><STRONG><a name="[44]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[45]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>

<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>IRQ01_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ01_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ01_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>IRQ02_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ02_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ02_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>IRQ03_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ03_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ03_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>IRQ04_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ04_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ04_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>IRQ05_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ05_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ05_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>IRQ06_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ06_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ06_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>IRQ09_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ09_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ09_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>IRQ12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ12_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ12_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>IRQ13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ13_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ13_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>IRQ15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ15_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>IRQ16_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ16_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ16_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>IRQ17_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ17_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ17_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>IRQ18_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ18_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ18_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>IRQ19_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ19_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ19_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>IRQ20_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ20_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ20_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>IRQ21_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ21_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ21_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>IRQ22_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ22_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ22_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>IRQ23_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ23_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ23_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>IRQ24_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ24_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ24_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>IRQ25_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ25_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ25_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>IRQ26_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ26_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ26_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>IRQ27_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ27_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ27_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>IRQ28_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ28_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ28_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>IRQ29_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ29_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ29_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>IRQ30_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ30_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ30_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>IRQ31_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ31_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ31_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[47]"></a>__2printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_fault_handler_c
</UL>

<P><STRONG><a name="[37]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[9c]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__printf</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, __printf_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[4e]"></a>getc</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, getc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getc &rArr; fgetc
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BaudRateCal
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[48]"></a>_printf_char_file</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[52]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[39]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3e]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a3]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a4]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>CLK_GetHocoFreq</STRONG> (Thumb, 86 bytes, Stack size 4 bytes, system_cms32l051.o(i.CLK_GetHocoFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CLK_GetHocoFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6b]"></a>IIC20_Stop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sci.o(i.IIC20_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_sendend
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_receiveend
</UL>

<P><STRONG><a name="[5b]"></a>IIC20_StopCondition</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, sci.o(i.IIC20_StopCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IIC20_StopCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>

<P><STRONG><a name="[6c]"></a>IIC21_Stop</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sci.o(i.IIC21_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_sendend
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_receiveend
</UL>

<P><STRONG><a name="[5f]"></a>IIC21_StopCondition</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, sci.o(i.IIC21_StopCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC21_StopCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>

<P><STRONG><a name="[b]"></a>IRQ00_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_cms32l051.o(i.IRQ00_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>IRQ07_Handler</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, sci_user.o(i.IRQ07_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IRQ07_Handler &rArr; IIC20_StopCondition
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC20_StopCondition
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_sendend
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_receiveend
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IRQ08_Handler</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, sci_user.o(i.IRQ08_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IRQ08_Handler &rArr; IIC21_StopCondition
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC21_StopCondition
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_sendend
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_receiveend
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SPI11_Stop</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sci.o(i.SPI11_Stop), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi11_callback_sendend
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi11_callback_receiveend
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, system_cms32l051.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate &rArr; CLK_GetHocoFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHocoFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, system_cms32l051.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; CLK_GetHocoFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHocoFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(.text)
</UL>
<P><STRONG><a name="[65]"></a>UART0_BaudRate</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, sci.o(i.UART0_BaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART0_BaudRate &rArr; UART_BaudRateCal
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BaudRateCal
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[67]"></a>UART0_Init</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, sci.o(i.UART0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UART0_Init &rArr; UART0_BaudRate &rArr; UART_BaudRateCal
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_BaudRate
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>UART0_Receive</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sci.o(i.UART0_Receive))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[6a]"></a>UART0_Send</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sci.o(i.UART0_Send))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[66]"></a>UART_BaudRateCal</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, sci.o(i.UART_BaudRateCal))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_BaudRateCal
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_BaudRate
</UL>

<P><STRONG><a name="[59]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, system_cms32l051.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHocoFreq
</UL>

<P><STRONG><a name="[4c]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[42]"></a>_sys_exit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, retarget.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[6d]"></a>delayMS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.delayMS))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(i.ferror))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[4f]"></a>fgetc</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, retarget.o(i.fgetc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fgetc
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Send
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
</UL>

<P><STRONG><a name="[2e]"></a>fputc</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>hard_fault_handler_c</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, main.o(i.hard_fault_handler_c))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = hard_fault_handler_c &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.emb_text)
</UL>
<P><STRONG><a name="[3d]"></a>main</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = main &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMS
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[19]"></a>IRQ14_Handler</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, sci_user.o(i.spi11_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IRQ14_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>spi11_interrupt</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, sci_user.o(i.spi11_interrupt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi11_callback_sendend
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi11_callback_receiveend
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi11_callback_error
</UL>

<P><STRONG><a name="[16]"></a>IRQ11_Handler</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, sci_user.o(i.uart0_interrupt_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>uart0_interrupt_receive</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, sci_user.o(i.uart0_interrupt_receive), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_callback_softwareoverrun
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_callback_receiveend
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_callback_error
</UL>

<P><STRONG><a name="[15]"></a>IRQ10_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, sci_user.o(i.uart0_interrupt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ10_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>uart0_interrupt_send</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sci_user.o(i.uart0_interrupt_send), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_callback_sendend
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[63]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sci.o(i.__NVIC_ClearPendingIRQ), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI11_Stop
</UL>

<P><STRONG><a name="[5a]"></a>iic20_callback_master_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.iic20_callback_master_error))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>

<P><STRONG><a name="[5d]"></a>iic20_callback_master_receiveend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.iic20_callback_master_receiveend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iic20_callback_master_receiveend
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC20_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>

<P><STRONG><a name="[5c]"></a>iic20_callback_master_sendend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.iic20_callback_master_sendend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iic20_callback_master_sendend
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC20_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>

<P><STRONG><a name="[5e]"></a>iic21_callback_master_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.iic21_callback_master_error))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>

<P><STRONG><a name="[61]"></a>iic21_callback_master_receiveend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.iic21_callback_master_receiveend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iic21_callback_master_receiveend
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC21_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>

<P><STRONG><a name="[60]"></a>iic21_callback_master_sendend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.iic21_callback_master_sendend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iic21_callback_master_sendend
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC21_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>

<P><STRONG><a name="[71]"></a>spi11_callback_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.spi11_callback_error), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi11_interrupt
</UL>

<P><STRONG><a name="[6e]"></a>spi11_callback_receiveend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.spi11_callback_receiveend), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI11_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi11_interrupt
</UL>

<P><STRONG><a name="[6f]"></a>spi11_callback_sendend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.spi11_callback_sendend), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI11_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi11_interrupt
</UL>

<P><STRONG><a name="[73]"></a>uart0_callback_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.uart0_callback_error), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt_receive
</UL>

<P><STRONG><a name="[74]"></a>uart0_callback_receiveend</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.uart0_callback_receiveend), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt_receive
</UL>

<P><STRONG><a name="[77]"></a>uart0_callback_sendend</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.uart0_callback_sendend), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt_send
</UL>

<P><STRONG><a name="[75]"></a>uart0_callback_softwareoverrun</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.uart0_callback_softwareoverrun), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt_receive
</UL>

<P><STRONG><a name="[2f]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[56]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[51]"></a>_printf_post_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[50]"></a>_printf_pre_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[49]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>
<HR></body></html>
